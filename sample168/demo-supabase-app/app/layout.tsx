// Next.js のメタデータ型をインポート
// → ページのタイトルや説明を型安全に設定するために使う
import type { Metadata } from "next";

// Google Fonts から Geist フォント（サンセリフとモノスペース）を読み込む
import { Geist, Geist_Mono } from "next/font/google";

// グローバルCSSを読み込む
import "./globals.css";

// サンセリフ体のフォント設定（変数として利用できるようにする）
const geistSans = Geist({
  variable: "--font-geist-sans", // CSS 変数名
  subsets: ["latin"],           // 使用する文字セット（ここでは英語・ラテン文字）
});

// 等幅フォント（コード表示などに使う）の設定
const geistMono = Geist_Mono({
  variable: "--font-geist-mono", // CSS 変数名
  subsets: ["latin"],            // 使用する文字セット
});

// ページ全体で共通して利用されるメタ情報を設定
export const metadata: Metadata = {
  title: "Create Next App",               // ブラウザのタブや検索結果に表示されるタイトル
  description: "Generated by create next app", // ページの説明文
};

// Next.js で全ページ共通のレイアウトを定義するコンポーネント
// RootLayout がアプリ全体を包み込む役割を持つ
export default function RootLayout({
  children, // ページごとに異なるコンテンツがここに入る
}: Readonly<{
  children: React.ReactNode; // 子要素の型（Reactの要素）
}>) {
  return (
    <html lang="en"> {/* ページの言語を英語に設定 */}
      <body
        // 読み込んだフォントや基本デザインのクラスを body に適用
        className={`${geistSans.variable} ${geistMono.variable} antialiased font-sans bg-background text-foreground`}
      >
        {/* ページごとに変わる部分をここに差し込む */}
        {children}
      </body>
    </html>
  );
}

// 元コード
// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased font-sans bg-background text-foreground`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }
